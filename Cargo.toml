# have multiple microservices
# - zahashi vault (include PKI (public key infrastructure), secrets management)
# - oblivious (zero-knowledge server)
# - api gateway with service registry (similar to dns records)

# - auth management
# /introspect

# Request
# { 
#     “fields”: [“username”, “email”],
#     “permissions”: [
#         “/sysinfo”, 
#         “/access-token/generate”
#     ]
# }

# Response
# {
#     “fields”: {
#         “username”: “…”,
#         “email”: “…”
#     },
#     “permissions”: {
#         “/sysinfo”: false,
#         “/access-token/generate”: true
#     }
# }


[workspace]
resolver = "3"
members = [
    "auth",
    "cache",
    "client-ip",
    "compiletime",
    "contextual",
    "dashcache",
    "data-access",
    "email",
    "extra",
    "middleware",
    "oblivious",
    "seed",
    "server",
    "tag",
    "test-proc-macros",
    "token",
    "validation",
    "wasm",
]

[profile.release]
lto = true
codegen-units = 1

[profile.web]
inherits = "release"
opt-level = "z"     # Optimize for size
lto = true          # Enable Link Time Optimization (LTO)
codegen-units = 1   # Forces the compiler to use a single code generation unit to improve optimizations
panic = "abort"     # Remove panic support, reducing code size
